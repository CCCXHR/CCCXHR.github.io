<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cccxhr.github.io</id>
    <title>CCC_XHR的博客</title>
    <updated>2020-11-01T04:47:57.683Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cccxhr.github.io"/>
    <link rel="self" href="https://cccxhr.github.io/atom.xml"/>
    <subtitle>CCC_XHR的小屋</subtitle>
    <logo>https://cccxhr.github.io/images/avatar.png</logo>
    <icon>https://cccxhr.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, CCC_XHR的博客</rights>
    <entry>
        <title type="html"><![CDATA[普及2019赛后回顾]]></title>
        <id>https://cccxhr.github.io/post/pu-ji-2019-sai-hou-hui-gu/</id>
        <link href="https://cccxhr.github.io/post/pu-ji-2019-sai-hou-hui-gu/">
        </link>
        <updated>2020-11-01T04:31:07.000Z</updated>
        <content type="html"><![CDATA[<h2 id="t1数字游戏">T1.数字游戏</h2>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int main()
{
    int ans=0;
    for(int i=0;i&lt;8;i++)
    {
        char ch;
        cin&gt;&gt;ch;
        if(ch=='1')
            ans++;
    }
    cout&lt;&lt;ans;
    return 0;
}
</code></pre>
<p>历年得分：100</p>
<p>测试得分：100</p>
<p>一道zz题，你只需要统计有多少个一就行了。</p>
<hr>
<h2 id="t2公交换乘">T2.公交换乘</h2>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
#include&lt;string&gt;
#include&lt;vector&gt;
#include&lt;string&gt;
#include&lt;deque&gt;
using namespace std;
struct record
{
	int time,coin;
	bool mark;
};
deque&lt;record&gt; q;
int main()
{
//	freopen(&quot;transfer.in&quot;,&quot;r&quot;,stdin);
//	freopen(&quot;transfer.out&quot;,&quot;w&quot;,stdout);
	int n;
	scanf(&quot;%d&quot;,&amp;n);
	int x,y,z;
	int ans=0;
	bool flag;
	for(register int i=1;i&lt;=n;++i)
	{
		scanf(&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);
		if(x==0)
		{
			q.push_back((record){z,y,0});				
			while(q.size()&amp;&amp;(!(z-q.front().time&lt;=45)||q.front().mark))
				q.pop_front();
			ans+=y;
		}
		else if(x==1)
		{
			flag=1;
			while(q.size()&amp;&amp;(!(z-q.front().time&lt;=45)||q.front().mark))
				q.pop_front();
			for(register int j=0;j&lt;q.size();++j)
				if(q[j].coin&gt;=y&amp;&amp;z-q[j].time&lt;=45&amp;&amp;q[j].mark==false)
				{
//					cout&lt;&lt;&quot;#&quot;&lt;&lt;q[j].time&lt;&lt;&quot; &quot;&lt;&lt;q[j].coin&lt;&lt;&quot; &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;&quot; &quot;&lt;&lt;z&lt;&lt;endl;
					flag=0;
					q[j].mark=true;
					break;	
				}	
			if(flag==1)
				ans+=y;
		}
	}
	printf(&quot;%d&quot;,ans);
	return 0;
}
</code></pre>
<p>历年得分：20分</p>
<p>测试得分：100分</p>
<p>思路：</p>
<p>这题我的做法是这样的：</p>
<ul>
<li>在线处理，每读入一次乘车记录，进行如下操作
<ul>
<li>对于乘坐地铁
<ul>
<li>首先，我们先弹出一切没有用了的车票，为以后的坐巴士弹出车票减轻一点负担。什么是没有用的车票呢？那就是
<ul>
<li>过时的车票（输入的乘车时间是<strong>递增</strong>的，如果对于这个时间车票失效，对于以后每次乘车，这张车票肯定也不能用）</li>
<li>使用过的车票</li>
</ul>
</li>
<li>接下来，把这次的乘车记录（时间和价值压入队列）</li>
<li>最后一定不要忘记：<strong>坐地铁一定要付钱！付钱！付钱！</strong></li>
</ul>
</li>
<li>对于巴士
<ul>
<li>首先，像地铁一样，弹出所有不能用的车票，为后续的扫描减轻负担。</li>
<li>接下来，依次扫描每张车票
<ul>
<li>如果这张车票可用（没有过时，没有被使用，而且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>i</mi><msub><mi>n</mi><mrow><mi>b</mi><mi>u</mi><mi>s</mi></mrow></msub><mo>≤</mo><mi>c</mi><mi>o</mi><mi>i</mi><msub><mi>n</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">coin_{bus} \le coin_{train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）那么把这张车票标记为不可用，退出扫描。</li>
<li>否则扫描下一张车票</li>
</ul>
</li>
<li>如果我们这次可以免票，那就直接跳过</li>
<li>否则的话就乖乖付钱吧。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>这里我使用了双端队列deque乱搞，本来以为会TLE，结果竟然过了，看来数据比较弱。</p>
<hr>
<h2 id="t3纪念品">T3.纪念品</h2>
<p>这是我至今没有写出来的一道题，我只知道ta是完全背包。</p>
<p>我是针对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10% , T=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>的数据骗的分。</p>
<p>如果只有一天，那么价格是不变的，不管小伟如何买进卖出，手上持有的金币数量都不会变（最后都要抛出），所以，输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2017普及赛后回顾]]></title>
        <id>https://cccxhr.github.io/post/2017pj/</id>
        <link href="https://cccxhr.github.io/post/2017pj/">
        </link>
        <updated>2020-09-14T09:24:12.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://wws.lanzous.com/b01hoguaj">配合音乐食用更佳</a></p>
<h3 id="t1成绩">T1.成绩</h3>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
using namespace std;
int main()
{
// 	freopen(&quot;score.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;score.out&quot;,&quot;w&quot;,stdout);
	double a,b,c;
	cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;
	double ans=0;
	ans+=a/100*20;
//	cout&lt;&lt;ans&lt;&lt;endl;
	ans+=b/100*30;
//	cout&lt;&lt;ans&lt;&lt;endl;
	ans+=c/100*50;
	cout&lt;&lt;(int)ans;
	return 0;
}
</code></pre>
<p><strong>得分：100</strong></p>
<p><strong>思路</strong>：<br>
没什么好讲的，直接模拟就好。注意中间过程要用<code>double</code>。</p>
<hr>
<h3 id="t2图书管理员">T2.图书管理员</h3>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;string&gt;
#include&lt;algorithm&gt;
using namespace std;
string str[1001];
bool cmp(string x,string y)
{
	if(x.length()!=y.length())
		return x.length()&lt;y.length();
	return x&lt;y;
}
int main()
{
// 	freopen(&quot;librarian.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;librarian.out&quot;,&quot;w&quot;,stdout);
	ios::sync_with_stdio(false);
	int n,q;
	cin&gt;&gt;n&gt;&gt;q;
	for(register int i=1;i&lt;=n;++i)
		cin&gt;&gt;str[i];
	sort(str+1,str+1+n,cmp);
	string s;
	int r,cnt;
	bool flag;
	int hhh;
	for(register int i=1;i&lt;=q;++i)
	{
		cin&gt;&gt;hhh&gt;&gt;s;
		for(register int j=1;j&lt;=n;++j)
		{
			flag=false;
			r=hhh-1;
			cnt=str[j].size()-1;
			if(cnt+1&lt;hhh)
				continue;
//			cout&lt;&lt;str[j]&lt;&lt;endl;
			for(register int k=cnt;r&gt;=0;--k)
			{
				if(s[r]!=str[j][k])
				{
					flag=true;
					break;
				}
				--r;
			}
			if(flag==false)
			{
				cout&lt;&lt;str[j]&lt;&lt;endl;
				break;
			}
			if(flag==true&amp;&amp;j==n)
			{
				cout&lt;&lt;-1&lt;&lt;endl;
				break;
			}
		}
	}
	return 0;
}
</code></pre>
<p><strong>得分：100</strong></p>
<p><strong>思路：</strong><br>
根据题意模拟，主要就是先排下序，查找的时候遍历每个字符串，从后往前匹配（询问还是正常顺序），找到匹配就可以输出答案，因为排了序，第一个就是答案。<br>
如果遍历完了还不行的话就无解了，在加一点小小的优化就OK了。</p>
<hr>
<h3 id="t3棋盘">T3.棋盘</h3>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
int map[101][101];//0:white 1:red 2:yellow
bool mark[101][101];
int n,m;
int ans=2147483647;
void dfs(int x,int y,int money,bool magic,int fx,int fy)
{
	if(mark[x][y])
		return;
//	cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;
	if(money&gt;ans)
		return;
	if(x==n&amp;&amp;y==n)
	{
		ans=min(ans,money);
		return;
	}
	mark[x][y]=true;
	if(x&lt;n)
	{
		if(map[x+1][y]==0&amp;&amp;magic)
			dfs(x+1,y,money+2,0,x,y);
		else if(map[x+1][y]==map[x][y]&amp;&amp;map[x][y]!=0)
			dfs(x+1,y,money,1,x,y);
		else if(map[x+1][y]!=map[x][y])
			if(map[x][y]!=0)
				dfs(x+1,y,money+1,1,x,y);
			else
				if(map[fx][fy]==map[x+1][y])
					dfs(x+1,y,money,1,x,y);
				else
					dfs(x+1,y,money+1,1,x,y);
	}
	if(y&lt;n)
	{
		if(map[x][y+1]==0&amp;&amp;magic)
			dfs(x,y+1,money+2,0,x,y);
		else if(map[x][y+1]==map[x][y]&amp;&amp;map[x][y]!=0)
			dfs(x,y+1,money,1,x,y);
		else if(map[x][y+1]!=map[x][y])
			if(map[x][y]!=0)
				dfs(x,y+1,money+1,1,x,y);
			else
				if(map[fx][fy]==map[x][y+1])
					dfs(x,y+1,money,1,x,y);
				else
					dfs(x,y+1,money+1,1,x,y);
	}
	if(x&gt;1)
	{
		if(map[x-1][y]==0&amp;&amp;magic)
			dfs(x-1,y,money+2,0,x,y);
		else if(map[x-1][y]==map[x][y]&amp;&amp;map[x][y]!=0)
			dfs(x-1,y,money,1,x,y);
		else if(map[x-1][y]!=map[x][y])
			if(map[x][y]!=0)
				dfs(x-1,y,money+1,1,x,y);
			else
				if(map[fx][fy]==map[x-1][y])
					dfs(x-1,y,money,1,x,y);
				else
					dfs(x-1,y,money+1,1,x,y);
	}
	if(y&gt;1)
	{
		if(map[x][y-1]==0&amp;&amp;magic)
			dfs(x,y-1,money+2,0,x,y);
		else if(map[x][y-1]==map[x][y]&amp;&amp;map[x][y]!=0)
			dfs(x,y-1,money,1,x,y);
		else if(map[x][y-1]!=map[x][y])
			if(map[x][y]!=0)
				dfs(x,y-1,money+1,1,x,y);
			else
				if(map[fx][fy]==map[x][y-1])
					dfs(x,y-1,money,1,x,y);
				else
					dfs(x,y-1,money+1,1,x,y);
	}
	mark[x][y]=false;
}
int main()
{
// 	freopen(&quot;chess.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;chess.out&quot;,&quot;w&quot;,stdout);
	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
	int x,y,z;
	for(register int i=1;i&lt;=m;++i)
	{
		scanf(&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);
		map[x][y]=z+1;
	}
	dfs(1,1,0,1,1,1);
	if(ans==2147483647)
		printf(&quot;-1&quot;);
	else
		printf(&quot;%d&quot;,ans);
	return 0;
}
</code></pre>
<p><strong>赛时思路：</strong><br>
按照题目疯狂搜索，不走回头路，到达终点就更新答案。对于白色格子的处理直接写挂。</p>
<figure data-type="image" tabindex="1"><img src="https://cccxhr.github.io/post-images/1600259708515.png" alt="" loading="lazy"></figure>
<p><strong>AC</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
int map[101][101];//0:white 1:red 2:yellow
int memory[101][101];
int _x[4]={1,-1,0,0}, \
_y[4]={0,0,1,-1};
int n,m;
int ans=2147483647;
void dfs(int x,int y,int money,bool magic)
{
//	cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;
	if(money&gt;=ans||money&gt;=memory[x][y])
		return;
	memory[x][y]=money;
	if(x==n&amp;&amp;y==n)
	{
//		cout&lt;&lt;&quot;Hello World\n&quot;;
		ans=min(ans,money);
		return;
	}
	/*
	if(x&lt;n)
	{
		if(map[x+1][y]==0&amp;&amp;magic)
			dfs(x+1,y,money+2,0,x,y);
		else if(map[x+1][y]==map[x][y]&amp;&amp;map[x][y]!=0)
			dfs(x+1,y,money,1,x,y);
		else if(map[x+1][y]!=map[x][y])
			if(map[x][y]!=0)
				dfs(x+1,y,money+1,1,x,y);
			else
				if(map[fx][fy]==map[x+1][y])
					dfs(x+1,y,money,1,x,y);
				else
					dfs(x+1,y,money+1,1,x,y);
	}
	*/
	int nextx,nexty;
	for(register int i=0;i&lt;4;++i)
	{
		nextx=x+_x[i];
		nexty=y+_y[i];
//		cout&lt;&lt;nextx&lt;&lt;&quot; &quot;&lt;&lt;nexty&lt;&lt;endl;
		if(nextx&lt;1||nextx&gt;n||nexty&lt;1||nexty&gt;n)
			continue;
		if(map[nextx][nexty]==0)//下一格是白色的，而且还没有用过魔法
		{
			if(!magic)//用不了魔法~
				continue;
			map[nextx][nexty]=map[x][y];
			dfs(nextx,nexty,money+2,0);//用不了魔法了~
			map[nextx][nexty]=0;
		}
		else if(map[nextx][nexty]==map[x][y])//颜色一样，不用花钱
			dfs(nextx,nexty,money,1);
		else if(map[nextx][nexty]!=map[x][y])//颜色不同，花1金币
			dfs(nextx,nexty,money+1,1);
	}
}
int main()
{
//	freopen(&quot;chess.in&quot;,&quot;r&quot;,stdin);
//	freopen(&quot;chess.out&quot;,&quot;w&quot;,stdout);
	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
	for(register int i=1;i&lt;=n;++i)
		for(register int j=1;j&lt;=n;++j)
			memory[i][j]=2147483647;
	int x,y,z;
	for(register int i=1;i&lt;=m;++i)
	{
		scanf(&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);
		map[x][y]=z+1;
	}
	dfs(1,1,0,1);
	if(ans==2147483647)
		printf(&quot;-1&quot;);
	else
		printf(&quot;%d&quot;,ans);
	return 0;
}
</code></pre>
<p><strong>更改</strong><br>
除了一些存储部分，基本上推翻重写了</p>
<p><strong>思路</strong></p>
<ul>
<li>对于搜索
<ul>
<li>前进方向<br>
使用数组存储进行优化。x数组是<code>{0,0,1,-1}</code>，y数组是<code>{1,-1,0,0}</code>。每次前进下一次的坐标就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>x</mi><msub><mi>t</mi><mi>x</mi></msub><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mi>e</mi><mi>x</mi><msub><mi>t</mi><mi>y</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">next_x=x_i+x , next_y=y_i+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>。</li>
<li>格子的特判<br>
分成了下列的情况：
<ol>
<li>白色格子（能够使用魔法）<br>
白色格子的话重点是修改颜色一定要记得恢复，首先将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>a</mi><msub><mi>p</mi><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>y</mi></mrow></msub><mo>=</mo><mi>m</mi><mi>a</mi><msub><mi>p</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">map_{nextx,nexty}=map_{x,y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。接下来<code>dfs(nextx,nexty,money+2,false)</code>，参数的作用：下一对坐标，金币多用了2枚，下一次不能使用魔法。值得注意的是，除了下一个格子是白色的情况，其它不管当前魔法是否能使用，下一步一定能使用魔法。</li>
<li>颜色相同<br>
如果颜色相同，那么不用额外的花费也不需要修改，可以直接搜索。即<code>dfs(nextx,nexty,money,true)</code></li>
<li>颜色不同<br>
不需要做额外的修改，但是需要额外花费一枚金币。<code>dfs(nextx,nexty,money+1,true)</code></li>
</ol>
</li>
<li>记忆化搜索<br>
考场时没想到这一重优化，直接导致TLE。思路其实很简单，就是记录一下<strong>从起点到当前这个点的最小花费</strong>。（讲真，这玩意可以代替<code>ans</code>变量。我为啥还要那货······）</li>
<li>剪枝优化<br>
记忆化搜索就是为这个准备的。条件是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>y</mi><mo>≥</mo><mi>m</mi><mi>e</mi><msub><mi>m</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">money \geq mem_{x,y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi>y</mi><mo>≥</mo><mi>m</mi><mi>e</mi><msub><mi>m</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">money \geq mem_{x,y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> ，那么无论如何优化，这次搜索得到的答案也肯定无法更新最优解。既然更新不了，我还搜它作甚？剪掉！✂</li>
<li><s>亿</s>一些注意事项
<ul>
<li>记忆数组初始要赋为无穷大！</li>
<li>白色格子变更后<strong>一定要重置</strong>！</li>
<li>一定要判断有没有出界！</li>
<li>初始的时候能用魔法！</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="t4跳房子">T4.跳房子</h3>
<p><strong>考场的代码：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#include&lt;stdlib.h&gt;
using namespace std;
#define MAXN 11
int val[MAXN]; 
int points[MAXN];
int main()
{
// 	freopen(&quot;jump.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;jump.out&quot;,&quot;w&quot;,stdout);
	printf(&quot;-1&quot;);
	return 0;
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://cccxhr.github.io/post-images/1600259834450.png" alt="" loading="lazy"></figure>
<p><strong>我的<s>做梦</s>思路</strong><br>
梦：</p>
<blockquote>
<p>共一行，一个整数，表示至少要花多少金币来改造他的机器人。若无论如何他都无法获得至少<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>分，输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。<br>
于是我灵机一动，输出-1。</p>
</blockquote>
<p>现实：</p>
<p>WA<sub>WA</sub>WA~（在此强烈谴责 <s>不</s> 良心CCF，说是要输出-1竟然没有一个点要输出-1！！！）</p>
<p>回归正道，既然不能输出-1，那就看看有没有别的解法。先挂<strong>代码</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
using namespace std;
#define MAXN 500001
long long val[MAXN]; 
long long points[MAXN];
long long dp[MAXN];
int n,d,k;
bool ok(int x)
{
	/*for(register int i=1;i&lt;=n;++i)
		dp[i]=-999999;*/
	memset(dp,-127,sizeof(dp));
	int left=d-x,right=x+d;//改造完成~
	if(left&lt;=0)
		left=1;
	dp[0]=0;
	for(register int i=1;i&lt;=n;++i)
	{
		for(register int j=i-1;j&gt;=0;--j)
		{
			if(val[i]-val[j]&lt;left)
				continue;
			if(val[i]-val[j]&gt;right)
				break;
			dp[i]=max(dp[i],dp[j]+points[i]);
			if(dp[i]&gt;=k)
				return true;
		}
// 		printf(&quot;#check : %d %d\n&quot;,i,dp[i]);
	}
	return false;
}
int main()
{
//	freopen(&quot;jump.in&quot;,&quot;r&quot;,stdin);
//	freopen(&quot;jump.out&quot;,&quot;w&quot;,stdout);
	scanf(&quot;%lld%lld%lld&quot;,&amp;n,&amp;d,&amp;k);
	for(register int i=1;i&lt;=n;++i)
		scanf(&quot;%lld%lld&quot;,&amp;val[i],&amp;points[i]);
	int left=0,right=1005,mid=(left+right)/2;
	int ans=0;
	while(left&lt;=right)
	{
		if(ok(mid))
		{
// 			printf(&quot;Success: %d %d %d %d\n&quot;,left,right,mid,ans);
			ans=mid;
			right=mid-1;
		}
		else
		{	
// 			printf(&quot;Faild: %d %d %d\n&quot;,left,right,mid);
			left=mid+1;
		}
		mid=(left+right)/2;
	}
	printf(&quot;%lld&quot;,ans);
	return 0;
}
</code></pre>
<p><strong>思路</strong><br>
二分+动态规划。<br>
二分啥呢？当然是改造的花费。</p>
<p>二分思路：</p>
<ol>
<li>如果当前的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span>可以被接受，那么尝试更小的花费，也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>d</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r=mid-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，同时，记录一下答案。</li>
<li>如果当前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span>无法得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>分，那么尝试更大的改造费用，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>d</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">l=mid+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</li>
</ol>
<p>动态规划思路：<br>
设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">dp_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为:对于第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个格子最大的得分。<br>
初始条件：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">dp_0=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span><br>
状态转移方程：<br>
每一个格子必定是从前面的格子跳过来的。所以</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>max</mi><mo>⁡</mo><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>→</mo><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><mo>+</mo><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">dp_i=\max {dp_{i-1} \to dp_i} + points_i
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>让后就没有然后了。</p>
<p><strong><s>亿</s>几个注意事项：</strong></p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">dp_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>一定要初始化为0。</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">dp_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>请初始化为无穷小，但是需要保证<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><msub><mi>p</mi><mi>i</mi></msub><mo>+</mo><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">dp_i+points_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>不会超过-2147483647。</li>
</ul>
<hr>
<p>写在最后的最后：<br>
请先猜一猜网址：<br>
<a href="https://cccxhr.github.io/post/???">https://cccxhr.github.io/post/???</a></p>
<p>关于？？？的提示：<br>
ta一定知道答案。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[普及2016赛后回顾]]></title>
        <id>https://cccxhr.github.io/post/pj2016/</id>
        <link href="https://cccxhr.github.io/post/pj2016/">
        </link>
        <updated>2020-09-09T12:21:23.000Z</updated>
        <content type="html"><![CDATA[<h2 id="t1买铅笔">T1.买铅笔</h2>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
int main()
{
// 	freopen(&quot;pencil.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;pencil.out&quot;,&quot;w&quot;,stdout);
	int n;
	int a1,a2,b1,b2,c1,c2;
	scanf(&quot;%d&quot;,&amp;n);
	scanf(&quot;%d%d%d%d%d%d&quot;,&amp;a1,&amp;a2,&amp;b1,&amp;b2,&amp;c1,&amp;c2);
	int ans1=0,ans2=0,ans3=0;
	int ans;
	int ls=0;
	ls=n%a1;
	if(ls!=0)
		ans1=((n-ls)/a1+1)*a2;
	else 
		ans1=a1/n*a2;
	ls=n%b1;
	if(ls!=0)
		ans2=((n-ls)/b1+1)*b2;
	else 
		ans2=b1/n*b2;
	ls=n%c1;
	if(ls!=0)
		ans3=((n-ls)/c1+1)*c2;
	else 
		ans3=c1/n*c2;
	ans=min(min(ans1,ans2),ans3);
	printf(&quot;%d&quot;,ans); 
	return 0;
}
</code></pre>
<p><strong>得分：50</strong></p>
<figure data-type="image" tabindex="1"><img src="https://cccxhr.github.io/post-images/1599654636230.png" alt="" loading="lazy"></figure>
<p><strong>考场思路：</strong></p>
<p>逐个查看要买多少和，比较得出最优解并输出。</p>
<p>错误：</p>
<p>模数与被模数写反。</p>
<p><strong>AC代码：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
int main()
{
	//freopen(&quot;pencil.in&quot;,&quot;r&quot;,stdin);
	//freopen(&quot;pencil.out&quot;,&quot;w&quot;,stdout);
	int n;
	int a1,a2,b1,b2,c1,c2;
	scanf(&quot;%d&quot;,&amp;n);
	scanf(&quot;%d%d%d%d%d%d&quot;,&amp;a1,&amp;a2,&amp;b1,&amp;b2,&amp;c1,&amp;c2);
	int ans1=0,ans2=0,ans3=0;
	int ans;
	int ls=0;
	ls=n%a1;
    ans1=n/a1;
    if(ls)
        ++ans1;
    ls=n%b1;
    ans2=n/b1;
    if(ls)
        ++ans2;
    ls=n%c1;
    ans3=n/c1;
    if(ls)
        ++ans3;
	ans=min(min(ans1*a2,ans2*b2),ans3*c2);
	printf(&quot;%d&quot;,ans); 
	return 0;
}
</code></pre>
<p><strong>更改：</strong><br>
推翻重写。</p>
<p><strong>思路：</strong></p>
<p>对于每种铅笔：</p>
<ol>
<li>查看要买多少盒</li>
<li>如果不够用，要买的盒数+1（答案是要买的盒数*价格）</li>
<li>取最小值输出。</li>
</ol>
<hr>
<h2 id="t2回文日期">T2.回文日期</h2>
<p><strong>考场代码：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
#include&lt;string&gt;
using namespace std;
int month[13]={0,31,0,31,30,31,30,31,31,30,31,30,31};
inline bool check(string q)
{
	string s;
	int cnt=q.size();
	for(register int i=cnt-1;i&gt;=0;--i)
		s+=q[i];
	return (s==q);
}
int main()
{
// 	freopen(&quot;date.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;date.out&quot;,&quot;w&quot;,stdout);
	string date1,date2;
	cin&gt;&gt;date1&gt;&gt;date2;
	if(date1==date2)
	{	
		if(check(date2))
			cout&lt;&lt;1;
		else
			cout&lt;&lt;0;
		return 0;
	}
	cout&lt;&lt;0;
	return 0;
} 
</code></pre>
<p><strong>得分：64</strong></p>
<figure data-type="image" tabindex="2"><img src="https://cccxhr.github.io/post-images/1599655240398.png" alt="" loading="lazy"></figure>
<p><strong>思路：</strong></p>
<p>看到这句话，我想到了啥······</p>
<blockquote>
<p>对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>60</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">60\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mord">%</span></span></span></span>的数据，满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mn>1</mn><mo>=</mo><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">date1=date2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord">2</span></span></span></span>。</p>
</blockquote>
<p>这意味着什么？date1到date2只有一个日期（date1）。只需要判断date1是不是回文，答案不是1就是0。最后如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mn>1</mn><mpadded width="0px"><mo></mo></mpadded><mo>=</mo><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mn>2</mn></mrow></mrow><annotation encoding="application/x-tex">date1\not ={date2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord">2</span></span></span></span></span>那么输出0碰运气。结果60+4(好运来~)。</p>
<p><strong>AC：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
inline bool check(int x)
{
	int pre=x;
	int q=0;
	while(x)
	{
		q=q*10+x%10;
		x/=10;
	}
	return (pre==q);
}
inline void hhh(int &amp;val,int &amp;date,int k)
{
	int t=1;
	for(register int i=0;i&lt;k;++i)
	{
		val=val+(date%10)*t;
		date/=10;
		t*=10;
	}
}
inline bool rn(int year)
{
	return ((year%4==0&amp;&amp;year%100!=0)||(year%400==0));
}
inline int make(int y,int m,int d)
{
	return d+m*100+y*10000;
}
int month_day[13]={-1,31,28,31,30,31,30,31,31,30,31,30,31};
int main()
{
	int date1,date2;
	scanf(&quot;%d%d&quot;,&amp;date1,&amp;date2);
	int year=0,month=0,day=0;
	int ty=0,tm=0,td=0;
	if(date1==date2)
	{
		printf(&quot;%d&quot;,check(date1));
		return 0;
	}
	hhh(day,date1,2);
	hhh(month,date1,2);
	hhh(year,date1,4);
	hhh(td,date2,2);
	hhh(tm,date2,2);
	hhh(ty,date2,4);
	int ans=0;
	while(day!=td||month!=tm||year!=ty)
	{
// 		cout&lt;&lt;make(year,month,day)&lt;&lt;endl;
//		system(&quot;pause&quot;);
		if(check(make(year,month,day)))
			++ans;
		++day;
		int md=month_day[month];
		if(md==28)
			md=(rn(year)==1)?29:28;
		if(day&gt;md)
		{
			day=1;
			++month;
		}
		if(month==13)
		{
			month=1;
            ++year;
		}
	}
	if(check(make(year,month,day)))
		++ans;
	printf(&quot;%d&quot;,ans);
	return 0;
}
</code></pre>
<p><strong>更改：完全推翻重写！</strong></p>
<p><strong>思路：</strong></p>
<p>把年月日分开处理。如果当前日期<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mpadded width="0px"><mo></mo></mpadded><mo>=</mo><mrow></mrow></mrow><annotation encoding="application/x-tex">\not ={}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord"></span></span></span></span>目标日期，那么day+1。如果day超过了这个月的天数（2月特判即可），那么month+1，day归1。如果month超过了12，那么month&amp;day归一。year+1。<br>
最后记得要处理一下date2。</p>
<hr>
<h3 id="t3海港">T3.海港</h3>
<p><strong>考场代码：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;math.h&gt;
#include&lt;string.h&gt;
#include&lt;vector&gt;
#include&lt;algorithm&gt;
#include&lt;string&gt;
using namespace std;
#define hour 86400
struct Pig
{
	int time,from,boat;
};
Pig pg[300002];
bool mark[100001];
int tail=0;
vector&lt;int&gt; answer;
int main()
{
// 	freopen(&quot;port.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;port.out&quot;,&quot;w&quot;,stdout);
	int n,x,y,z;
	int an=0;
	scanf(&quot;%d&quot;,&amp;n);
	for(register int i=1;i&lt;=n;++i)
	{
		scanf(&quot;%d&quot;,&amp;z);
		scanf(&quot;%d&quot;,&amp;x);
		for(register int j=1;j&lt;=x;++j)
		{
			scanf(&quot;%d&quot;,&amp;y);
			pg[++tail].time=z;
			pg[tail].from=y;
			pg[tail].boat=i;
		}
	}
	if(n==1)
	{
		for(register int i=1;i&lt;=tail;++i)
			if(mark[pg[i].from]==0)
			{
				mark[pg[i].from]=1;
				++an;
			}
		printf(&quot;%d&quot;,an);
		return 0;
	}
//	cout&lt;&lt;&quot;ok&quot;;
	pg[tail+1].from=-1;
	int lin_toto;
	int ans;
	while(tail&gt;0)
	{
		ans=0;
		if(pg[tail].boat==pg[tail+1].boat)
		{
			--tail;
			continue;
		}
		lin_toto=tail;
		memset(mark,0,sizeof(mark));
//		cout&lt;&lt;&quot;ok&quot;;
		while(pg[tail].time-pg[lin_toto].time&lt;hour&amp;&amp;lin_toto&gt;=1)
		{
			if(mark[pg[lin_toto].from]==0)
			{
				mark[pg[lin_toto].from]=1;
//				cout&lt;&lt;pg[lin_toto].from&lt;&lt;&quot; &quot;;
				++ans;
			}
			--lin_toto;
//			cout&lt;&lt;&quot;ok&quot;&lt;&lt;endl;
		}
		--tail;
//		printf(&quot;\n&quot;);
//		printf(&quot;%d\n&quot;,ans);
		answer.push_back(ans);
	}
	for(int i=answer.size()-1;i&gt;=0;--i)
		cout&lt;&lt;answer[i]&lt;&lt;endl;
	return 0;
}
</code></pre>
<p><strong>得分：70</strong></p>
<figure data-type="image" tabindex="3"><img src="https://cccxhr.github.io/post-images/1599655865355.png" alt="" loading="lazy"></figure>
<p><strong>思路：</strong></p>
<p>记录每个乘客来到海港的时间、国籍、乘坐船只，同意加入数组（模拟队列）。对于每个乘客，对应国籍人数+1，乘客出队。每艘船统计完毕后输出答案并且清空结果数值。（这里需要逆序输出，所以是先压入了vector最后在输出的）</p>
<p><strong>AC代码</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;math.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
#include&lt;string&gt;
#include&lt;queue&gt;
using namespace std;
#define hour 86400
#define MAXX 100001
struct Pig
{
	int time,from;
};
queue&lt;Pig&gt; pig;
int cmp=1;
int tot[MAXX];
int main()
{
	int n,x,y,z;
	scanf(&quot;%d&quot;,&amp;n);
	int ans=0;
	while(n--)
	{
		scanf(&quot;%d%d&quot;,&amp;x,&amp;y);
		cmp=pig.front().time;
		while(!pig.empty())
		{
			if(pig.front().time+hour&gt;x)
				break;
			--tot[pig.front().from];
			if(tot[pig.front().from]==0)
				--ans;
			pig.pop();
		}
		while(y--)
		{
			scanf(&quot;%d&quot;,&amp;z);
			pig.push((Pig){x,z});
			++tot[z];
			if(tot[z]==1)
				++ans;
		}
		printf(&quot;%d\n&quot;,ans);
	}
	return 0;
}
</code></pre>
<p><strong>修改</strong><br>
重写。</p>
<p><strong>思路</strong></p>
<p>对于每个乘客，加入一个队列，队列记录的信息包括到达时间以及国籍。每次先弹出已经停留超过一小时的乘客（这些乘客的统计信息已经在前面输出）。如果某国籍人数降为0，那么答案-1（少了一个国家的人）。然后输入，如果这个乘客是某国籍的第一个来港者（24小时内），那么答案+1。最后输出答案。</p>
<hr>
<h3 id="t4魔法阵">T4.魔法阵</h3>
<p><strong>考场代码：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
#define MAXM 61
int ans[MAXM][4];
int x[MAXM];
int main()
{
// 	freopen(&quot;magic.in&quot;,&quot;r&quot;,stdin);
// 	freopen(&quot;magic.out&quot;,&quot;w&quot;,stdout);
	int n,m;
	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
	for(register int i=1;i&lt;=m;++i)
		scanf(&quot;%d&quot;,&amp;x[i]);
	for(register int i=1;i&lt;=m;++i)
	{
		for(register int j=1;j&lt;=m;++j)
		{
			for(register int k=1;k&lt;=m;++k)
			{
				for(register int l=1;l&lt;=m;++l)
				{
					if((x[i]&lt;x[j]&amp;&amp;x[j]&lt;x[k]&amp;&amp;x[k]&lt;x[l])&amp;&amp;(x[j]-x[i]==2*(x[l]-x[k]))&amp;&amp;(x[j]-x[i]&lt;(x[k]*1.0-x[j]*1.0)/3.0))
					{
//						cout&lt;&lt;x[i]&lt;&lt;&quot; &quot;&lt;&lt;x[j]&lt;&lt;&quot; &quot;&lt;&lt;x[k]&lt;&lt;&quot; &quot;&lt;&lt;x[l]&lt;&lt;endl;
						++ans[i][0];
						++ans[j][1];
						++ans[k][2];
						++ans[l][3];
					}
				}
			}
		}
	}
	for(register int i=1;i&lt;=m;++i)
	{
		for(register int j=0;j&lt;4;++j)
			printf(&quot;%d &quot;,ans[i][j]);
		printf(&quot;\n&quot;);
	}
	return 0;
}
</code></pre>
<p>**得分：**25分</p>
<figure data-type="image" tabindex="4"><img src="https://cccxhr.github.io/post-images/1599656903177.png" alt="" loading="lazy"></figure>
<p><strong>考场思路：</strong></p>
<p>枚举每个魔法阵的ABCD四个物品，判断条件是否满足，最后输出。</p>
<p><strong>亿些<s>小小小小</s>的问题</strong></p>
<ol>
<li>对评测姬性能估计错误，数组开小，经检查，将数组大小开至101可将得分优化至35。</li>
</ol>
<p><strong>55分代码：</strong></p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;string.h&gt;
#include&lt;algorithm&gt;
using namespace std;
#define MAXM 2001
int ans[MAXM][4];
typedef struct node
{
	int val,index;
};
node x[MAXM];
bool cmp(node x,node y)
{
	return x.val&lt;y.val;
}
int main()
{
//	freopen(&quot;magic.in&quot;,&quot;r&quot;,stdin);
//	freopen(&quot;magic.out&quot;,&quot;w&quot;,stdout);
	int n,m;
	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
	for(register int i=0;i&lt;m;++i)
	{
		scanf(&quot;%d&quot;,&amp;x[i].val);
		x[i].index=i;
	}
	sort(x,x+m,cmp);
	for(register int i=0;i&lt;m;++i)
	{
		for(register int j=i+1;j&lt;m;++j)
		{
			for(register int k=j+1;k&lt;m;++k)
			{
				for(register int l=k+1;l&lt;m;++l)
				{
					if((x[i].val&lt;x[j].val&amp;&amp;x[j].val&lt;x[k].val&amp;&amp;x[k].val&lt;x[l].val)&amp;&amp;(x[j].val-x[i].val==2*(x[l].val-x[k].val))&amp;&amp;(x[j].val-x[i].val&lt;(x[k].val*1.0-x[j].val*1.0)/3.0))
					{
//						cout&lt;&lt;x[i]&lt;&lt;&quot; &quot;&lt;&lt;x[j]&lt;&lt;&quot; &quot;&lt;&lt;x[k]&lt;&lt;&quot; &quot;&lt;&lt;x[l]&lt;&lt;endl;
						++ans[x[i].index][0];
						++ans[x[j].index][1];
						++ans[x[k].index][2];
						++ans[x[l].index][3];
					}
				}
			}
		}
	}
	for(register int i=0;i&lt;m;++i)
	{
		for(register int j=0;j&lt;4;++j)
			printf(&quot;%d &quot;,ans[i][j]);
		printf(&quot;\n&quot;);
	}
	return 0;
}
</code></pre>
<p><strong>更改：</strong><br>
增加了排序。</p>
<p><strong>思路：</strong></p>
<p>因为</p>
<blockquote>
<p>大魔法师认为，当且仅当四个编号为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">a,b,c,d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span></span></span></span>的魔法物品满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>a</mi></msub><mo>&lt;</mo><msub><mi>X</mi><mi>b</mi></msub><mo>&lt;</mo><msub><mi>X</mi><mi>c</mi></msub><mo>&lt;</mo><msub><mi>X</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">X_a &lt; X_b &lt; X_c &lt; X_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ······</p>
</blockquote>
<p>可以对其进行一次快速排序，然后就可以缩小<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">i,j,k,l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>四个变量的枚举范围。</p>
]]></content>
    </entry>
</feed>